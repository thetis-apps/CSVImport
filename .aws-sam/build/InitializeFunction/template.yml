AWSTemplateFormatVersion: 2010-09-09
Description: Application for the import of CSV files to Thetis IMS
Transform:
- AWS::Serverless-2016-10-31

# Metadata to use for the publishing to the SAR
Metadata:
  AWS::ServerlessRepo::Application:
    Name: thetis-ims-csv-import
    Description: Application for import of CSV files to Thetis IMS
    Author: thetis-apps
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['thetis-ims']
    HomePageUrl: https://github.com/thetis-apps/CSVImport
    SemanticVersion: 2.0.0
    SourceCodeUrl: https://github.com/thetis-apps/CSVImport

# Parameters of the application 
Parameters:
  ContextId:
    Type: String
    Description: Context that this application is handling events for.
  ClientId:
    Description: Key of the parameter that has your Thetis client id as its value.
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientId
  ClientSecret:
    Description: Key of the parameter that has your Thetis client secret as its value.
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientSecret
  ApiKey:
    Description: The api key that gives access to the context in Thetis IMS.
    Type: String
    MinLength: 1
  DevOpsEmail:
    Description: The email address to send mail to when messages in the dead letter queue.
    Type: String
    MinLength: 4
    
Globals:
  Function:
    Runtime: nodejs16.x
    
Resources:  

  # Initialisation of CSVImport integration in context        
  InitResource:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - InitializeFunction
        - Arn
      Version: 11
  InitializeFunction:
    Type: AWS::Serverless::Function
    DeletionPolicy: Delete
    Properties:
      Handler: src/handlers/csv-import.initializer
      MemorySize: 2048
      Timeout: 30
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
          ContextId:
            Ref: ContextId
            
  DispatchQueue: 
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 360
      FifoQueue: true
      KmsMasterKeyId: alias/aws/sqs
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - DispatchDeadLetterQueue
          - Arn
        maxReceiveCount: 300
        
  FileAttachedEventHandler:
    Type: AWS::Serverless::Function
    Properties:
      Description: Function that runs when a CSV file is attached.
      Handler: src/handlers/csv-import.fileAttachedEventHandler
      Policies:
      - AmazonSQSFullAccess
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
          DispatchQueue:
            Ref: DispatchQueue
      Events:
        Request:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
              - public.thetis-ims.com
              detail-type:
              - fileAttached
              detail:
                contextId:
                - Ref: ContextId
      MemorySize: 2048
      Timeout: 900
      DeadLetterQueue:
        Type: SQS
        TargetArn:
          Fn::GetAtt:
          - DeadLetterQueue
          - Arn
          
  Writer:
    Type: AWS::Serverless::Function
    Properties:
      Description: Function POST data to Thetis IMS.
      Handler: src/handlers/csv-import.writer
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
          DispatchQueue:
            Ref: DispatchQueue
      Events:
        Request:
          Type: SQS
          Properties:
            Queue: 
              Fn::GetAtt:
              - DispatchQueue
              - Arn
      MemorySize: 2048
      Timeout: 300
      ReservedConcurrentExecutions: 10

  # Our standard monitoring setup      
  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties: 
      KmsMasterKeyId: alias/aws/sqs
  DispatchDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties: 
      FifoQueue: true
